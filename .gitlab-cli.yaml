stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - api-deploy

variables:
  SOLUTION_FILE: 'src/ZeroPass.sln'
  PROJECT_FILE_APITEST: 'src/ZeroPass.Api.Tests/ZeroPass.Api.Tests.csproj'
  VERSTION_PREFIX: '1.3.0'

build:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - Version=$VERSTION_PREFIX.$CI_PIPELINE_IID
    - echo $Version
    - dotnet restore $SOLUTION_FILE
    - dotnet build $SOLUTION_FILE --no-restore --configuration Release -p:Version=$Version
    - echo "Compile complete."

test-api:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - dotnet test $PROJECT_FILE_APITEST
    - echo "Test complete."

deploy-api-dev:      # This job runs in the deploy stage.
  stage: api-deploy  # It only runs when *both* jobs in the test stage complete successfully.
  variables:
    NAME: "zeropass-community-api-dev"
    QUERY: 'items[?name==`$NAME`].id | [0]'
    UPDATE_FUNCTION_CMD: 'AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_ACCESS_KEY aws lambda update-function-configuration --region $DEV_AWS_DEFAULT_REGION --function-name $NAME --environment ''{"Variables":{"SMTP_SERVER":"$SMTP_SERVER","SMTP_USER":"$SMTP_USER","SMTP_PASSWORD":"$SMTP_PASSWORD","MysqlConnectionString":"$DEV_MYSQL_RW","ReadonlyMysqlConnectionString":"$DEV_MYSQL_RO","RedisConnectionString":"$DEV_REDIS_RW","ReadonlyRedisConnectionString":"$DEV_REDIS_RO","JWT_SECURITY_KEY":"$DEV_JWT_SECURITY_KEY","JWT_EXPIRES_SECONDS":"$DEV_JWT_EXPIRES_SECONDS","ASPNETCORE_ENVIRONMENT":"Development","APP_BUCKET_URL":"$DEV_APP_BUCKET_URL"}}'' --vpc-config $DEV_VPC_CONFIG'
  only:
    - dev
    - master
    - /^release.*$/
    - /^feature.*$/
    - /^pre-release.*$/
    - /^hotfix.*$/
  script:
    - dotnet lambda deploy-serverless --region $DEV_AWS_DEFAULT_REGION --aws-access-key-id $DEV_AWS_ACCESS_KEY_ID --aws-secret-key $DEV_AWS_SECRET_ACCESS_KEY -sn $NAME -sb $NAME-$DEV_AWS_DEFAULT_REGION -f netcoreapp3.1 -c Release -pl src/ZeroPass.Api/ -t serverless.dev.template --tags PipelineJobId=$CI_JOB_ID
    - 'eval "$UPDATE_FUNCTION_CMD"'
  environment:
    name: api-development
    url: https://ac79osmcj6.execute-api.ap-southeast-1.amazonaws.com/Prod/
  when: manual

deploy-api-test:      # This job runs in the deploy stage.
  stage: api-deploy  # It only runs when *both* jobs in the test stage complete successfully.
  variables:
    NAME: "zeropass-community-api-test"
    QUERY: 'items[?name==`$NAME`].id | [0]'
    UPDATE_FUNCTION_CMD: 'AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_ACCESS_KEY aws lambda update-function-configuration --region $DEV_AWS_DEFAULT_REGION --function-name $NAME --environment ''{"Variables":{"SMTP_SERVER":"$SMTP_SERVER","SMTP_USER":"$SMTP_USER","SMTP_PASSWORD":"$SMTP_PASSWORD","MysqlConnectionString":"$TEST_MYSQL_RW","ReadonlyMysqlConnectionString":"$TEST_MYSQL_RO","RedisConnectionString":"$TEST_REDIS_RW","ReadonlyRedisConnectionString":"$TEST_REDIS_RO","JWT_SECURITY_KEY":"$TEST_JWT_SECURITY_KEY","JWT_EXPIRES_SECONDS":"$TEST_JWT_EXPIRES_SECONDS","APP_BUCKET_URL":"$TEST_APP_BUCKET_URL"}}'' --vpc-config $TEST_VPC_CONFIG'
  only:
    - dev
    - master
    - /^release.*$/
    - /^feature.*$/
    - /^pre-release.*$/
    - /^hotfix.*$/
  script:
    - dotnet lambda deploy-serverless --region $DEV_AWS_DEFAULT_REGION --aws-access-key-id $DEV_AWS_ACCESS_KEY_ID --aws-secret-key $DEV_AWS_SECRET_ACCESS_KEY -sn $NAME -sb $NAME-$DEV_AWS_DEFAULT_REGION -f netcoreapp3.1 -c Release -pl src/ZeroPass.Api/ -t serverless.test.template --tags PipelineJobId=$CI_JOB_ID
    - 'eval "$UPDATE_FUNCTION_CMD"'
  environment:
    name: api-testing
    url: https://05otvoftc2.execute-api.ap-southeast-1.amazonaws.com/Prod/
  when: manual
